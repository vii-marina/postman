{
	"info": {
		"_postman_id": "b025cf15-54e5-49fc-b5ac-882a4f0bcc77",
		"name": "groups",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45509271",
		"_collection_link": "https://m-5183741.postman.co/workspace/m's-Workspace~a3552804-5132-4de7-814e-c0fc1a0af1d7/collection/45509271-b025cf15-54e5-49fc-b5ac-882a4f0bcc77?action=share&source=collection_link&creator=45509271"
	},
	"item": [
		{
			"name": "all groups",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код відповіді 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Масив не порожній\", () => {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8081/groups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "new group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Код відповіді має бути 403\", () => {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Помилка про заборонений доступ\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json.message).to.include(\"Access denied\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test_Group_{{randomInt}}\",\r\n  \"disable\": false\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/groups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"groups"
					]
				}
			},
			"response": []
		},
		{
			"name": "get group id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Отримання групи без токена має повертати 403\", () => {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Помилка доступу при GET за ID\", () => {\r",
							"    const body = pm.response.json();\r",
							"    pm.expect(body.message).to.include(\"Access denied\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "\tBearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8081/groups/{{group_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"groups",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete group",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Видалення без токена повертає 403\", () => {\r",
							"    pm.response.to.have.status(403);\r",
							"});\r",
							"\r",
							"pm.test(\"Повідомлення про заборону доступу\", () => {\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json.message).to.include(\"Access denied\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "\tBearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/groups/{{group_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"groups",
						"{{group_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login успішний\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Токен отримано\", () => {\r",
							"    const token = pm.response.json().token;\r",
							"    pm.expect(token).to.not.be.undefined;\r",
							"    pm.environment.set(\"token\", token);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"new_manager@gmail.com\",\r\n  \"password\": \"String!123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/auth/sign-in",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"auth",
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8081/auth/profile",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"auth",
						"profile"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Код відповіді має бути 403\", () => {\r",
					"    pm.response.to.have.status(403);\r",
					"});\r",
					"\r",
					"pm.test(\"Текст помилки правильний\", () => {\r",
					"    const body = pm.response.json();\r",
					"    pm.expect(body.message).to.include(\"Access denied\");\r",
					"});\r",
					""
				]
			}
		}
	]
}